name: Release

on:
  push:
    branches: [main]
    tags:
      - "v*"

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

env:
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  linux-builds:
    name: Linux Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [linux]
        goarch:
          - 386
          - amd64
          - arm64
          - mips
          - mips64
          - mips64le
          - mipsle
          - ppc64
          - ppc64le
          - riscv64
          - s390x

    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_${{ matrix.goos }}-${{ matrix.goarch }} \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/godns_${{ matrix.goos }}-${{ matrix.goarch }}
          if-no-files-found: error
          retention-days: 5

  bsd-builds:
    name: BSD Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [darwin, freebsd, openbsd, netbsd]
        goarch: [amd64, arm64]

    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_${{ matrix.goos }}-${{ matrix.goarch }} \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/godns_${{ matrix.goos }}-${{ matrix.goarch }}
          if-no-files-found: error
          retention-days: 5

  ios-build:
    name: iOS Build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest-xlarge
    timeout-minutes: 10
    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=1 GOOS=ios GOARCH=arm64 go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_ios-arm64 \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-ios-arm64
          path: dist/godns_ios-arm64
          if-no-files-found: error
          retention-days: 5

  android-build:
    name: Android Build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_android-arm64 \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-android-arm64
          path: dist/godns_android-arm64
          if-no-files-found: error
          retention-days: 5

  other-builds:
    name: Other Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [dragonfly, plan9, solaris]
        goarch: [amd64]

    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_${{ matrix.goos }}-${{ matrix.goarch }} \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/godns_${{ matrix.goos }}-${{ matrix.goarch }}
          if-no-files-found: error
          retention-days: 5

  windows-builds:
    name: Windows Builds
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [windows]
        goarch: [386, amd64, arm64]

    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Go Build
        run: |
          mkdir -p dist
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -trimpath \
            -ldflags "-s -w -X github.com/moloch--/godns/cmd.Version=${RELEASE_VERSION}" \
            -o dist/godns_${{ matrix.goos }}-${{ matrix.goarch }}.exe \
            .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/godns_${{ matrix.goos }}-${{ matrix.goarch }}.exe
          if-no-files-found: error
          retention-days: 5

  tagged-release:
    needs:
      - linux-builds
      - bsd-builds
      - ios-build
      - android-build
      - other-builds
      - windows-builds
    name: Tagged Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Check Out Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Collect Artifacts
        uses: actions/download-artifact@v6
        with:
          path: release
          pattern: build-*
          merge-multiple: true

      - name: Publish Release
        uses: bishopfox/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          files: release/*
