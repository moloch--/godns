name: Build Check

on:
  push:
    paths:
      - "go.mod"
      - "**.go"
    branches: [main]

  pull_request:
    paths:
      - "go.mod"
      - "**.go"
    branches: [main]

jobs:
  linux-builds:
    name: Linux Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [linux]
        goarch:
          [
            386,
            amd64,
            arm64,
            mips,
            mips64,
            mips64le,
            mipsle,
            ppc64,
            ppc64le,
            riscv64,
            s390x,
          ]

    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .

  bsd-builds:
    name: BSD Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [darwin, freebsd, openbsd, netbsd]
        goarch: [amd64, arm64]

    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .

  ios-build:
    name: iOS Build
    runs-on: macos-latest-xlarge
    timeout-minutes: 10
    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=1 GOOS=ios GOARCH=arm64 go build -trimpath -ldflags="-s -w" -o ./godns_ios-arm64 .

  androiod-build:
    name: Android Build
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=android GOARCH=arm64 go build -trimpath -ldflags="-s -w" -o ./godns_android-arm64 .

  other-builds:
    name: Other Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [dragonfly, plan9, solaris]
        goarch: [amd64]

    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }} .

  windows-builds:
    name: Windows Builds
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        goos: [windows]
        goarch: [386, amd64, arm64]

    steps:
      - name: Go 1.24
        uses: actions/setup-go@v4
        with:
          go-version: "^1.24"

      - name: Check Out Code
        uses: actions/checkout@v5

      - name: Git Fetch Tags
        run: git fetch --prune --unshallow --tags -f

      - name: Go Build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ./godns_${{ matrix.goos }}-${{ matrix.goarch }}.exe .
